{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyWork\\\\programming-language\\\\episode 2\\\\projects\\\\notes\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n  const [searchText, setSearchText] = useState(\"\"); // useEffect(() => {\n  //   const savedNotes = JSON.parse(localStorage.getItem(\"react-notes-app-data\"));\n  //   if (savedNotes) {\n  //     setNotes(savedNotes);\n  //   }\n  // }, []);\n  // useEffect(() => {\n  //   const mode = JSON.parse(localStorage.getItem(\"react-notes-app-mode-data\"));\n  //   if (mode) {\n  //     setDarkMode(mode);\n  //   }\n  // }, []);\n  // useEffect(() => {\n  //   localStorage.setItem(\"react-notes-app-data\", JSON.stringify(notes));\n  // }, [notes]);\n  // useEffect(() => {\n  //   localStorage.setItem(\"react-notes-app-mode-data\", JSON.stringify(darkMode));\n  // }, [darkMode]);\n\n  const addNote = text => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = id => {\n    const newNote = notes.filter(note => note.id !== id);\n    setNotes(newNote);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: darkMode ? \"dark-mode\" : \"\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleToggleMode: setDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        handleSearchNote: setSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n        notes: notes.filter(note => note.text.toLowerCase().includes(searchText)),\n        handleAddNote: addNote,\n        handleDeleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"h7t+e9Ihgwg8HEDYagolnpozMQQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/MyWork/programming-language/episode 2/projects/notes/src/App.js"],"names":["useEffect","useState","nanoid","NotesList","Search","Header","App","notes","setNotes","darkMode","setDarkMode","searchText","setSearchText","addNote","text","date","Date","newNote","id","toLocaleDateString","newNotes","deleteNote","filter","note","toLowerCase","includes"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C,CALgB,CAOhB;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAMY,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEhB,MAAM,EADI;AAEdY,MAAAA,IAAI,EAAEA,IAFQ;AAGdC,MAAAA,IAAI,EAAEA,IAAI,CAACI,kBAAL;AAHQ,KAAhB;AAKA,UAAMC,QAAQ,GAAG,CAAC,GAAGb,KAAJ,EAAWU,OAAX,CAAjB;AACAT,IAAAA,QAAQ,CAACY,QAAD,CAAR;AACD,GATD;;AAWA,QAAMC,UAAU,GAAIH,EAAD,IAAQ;AACzB,UAAMD,OAAO,GAAGV,KAAK,CAACe,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAhB;AACAV,IAAAA,QAAQ,CAACS,OAAD,CAAR;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAER,QAAQ,GAAG,WAAH,GAAiB,EAAzC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,gBAAgB,EAAEC;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,gBAAgB,EAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AACE,QAAA,KAAK,EAAEL,KAAK,CAACe,MAAN,CAAcC,IAAD,IAClBA,IAAI,CAACT,IAAL,CAAUU,WAAV,GAAwBC,QAAxB,CAAiCd,UAAjC,CADK,CADT;AAIE,QAAA,aAAa,EAAEE,OAJjB;AAKE,QAAA,gBAAgB,EAAEQ;AALpB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9DD;;GAAMf,G;;KAAAA,G;AAgEN,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n\n  const [darkMode, setDarkMode] = useState(false);\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  // useEffect(() => {\n  //   const savedNotes = JSON.parse(localStorage.getItem(\"react-notes-app-data\"));\n\n  //   if (savedNotes) {\n  //     setNotes(savedNotes);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   const mode = JSON.parse(localStorage.getItem(\"react-notes-app-mode-data\"));\n\n  //   if (mode) {\n  //     setDarkMode(mode);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"react-notes-app-data\", JSON.stringify(notes));\n  // }, [notes]);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"react-notes-app-mode-data\", JSON.stringify(darkMode));\n  // }, [darkMode]);\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    const newNote = notes.filter((note) => note.id !== id);\n    setNotes(newNote);\n  };\n\n  return (\n    <div className={darkMode ? \"dark-mode\" : \"\"}>\n      <div className=\"container\">\n        <Header handleToggleMode={setDarkMode} />\n        <Search handleSearchNote={setSearchText} />\n        <NotesList\n          notes={notes.filter((note) =>\n            note.text.toLowerCase().includes(searchText)\n          )}\n          handleAddNote={addNote}\n          handleDeleteNote={deleteNote}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}